name: Release (Tag-Based)
on:
  push:
    tags:
      - "v*"
      - "latest"

env:
  # TODO: Remplacez "template" par le nom de votre plugin (ex: "discord", "aws", "fs")
  PLUGIN_NAME: "template"

jobs:
  build:
    name: Build Plugin for ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      - name: Set output file and archive names
        id: set_names
        shell: bash
        run: |
          # Le nom du plugin, sans le préfixe "orkestra-plugin-"
          PLUGIN_NAME="fs"
          
          # Le nom complet de l'exécutable
          EXECUTABLE_BASE="orkestra-plugin-${PLUGIN_NAME}"
          EXECUTABLE_NAME="${EXECUTABLE_BASE}"
          
          # Ajoute l'extension .exe pour Windows
          if [ "${{ matrix.goos }}" == "windows" ]; then
            EXECUTABLE_NAME="${EXECUTABLE_BASE}.exe"
          fi
          
          # Le nom final de l'archive .zip, respectant la convention
          ARCHIVE_NAME="${{ matrix.goos }}_${{ matrix.goarch }}.zip"

          # Expose ces variables pour les étapes suivantes
          echo "EXECUTABLE_NAME=${EXECUTABLE_NAME}" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=${ARCHIVE_NAME}" >> $GITHUB_ENV

      - name: Build plugin
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o ${{ env.EXECUTABLE_NAME }} .

      - name: Archive plugin
        run: zip ${{ env.ARCHIVE_NAME }} ${{ env.EXECUTABLE_NAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-archive-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ${{ env.ARCHIVE_NAME }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: plugin-archive-*/*
          body: "Automated release of ${{ github.ref_name }}."